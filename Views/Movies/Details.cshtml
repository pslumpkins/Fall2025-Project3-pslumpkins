@model Fall2025_Project3_pslumpkins.Models.ViewModels.MovieDetailsVM
@using System

@{
    ViewData["Title"] = $"{Model.Movie.Title} ({Model.Movie.Year})";
    string AvgBadge(double s) =>
        s >= 0.5 ? "bg-success" : (s <= -0.25 ? "bg-danger" : "bg-warning text-dark");
}

<h1>@Model.Movie.Title (@Model.Movie.Year)</h1>

<div class="row g-4 mt-1">
    <div class="col-md-3">
        @if (Model.Movie.Poster?.Length > 0)
        {
            var b64 = Convert.ToBase64String(Model.Movie.Poster);
            <img src="data:image/jpeg;base64,@b64" alt="Poster" class="img-fluid rounded shadow-sm" />
        }
        else
        {
            <div class="text-muted fst-italic">No poster uploaded.</div>
        }
        @if (!string.IsNullOrWhiteSpace(Model.Movie.MovieImdb))
        {
            <div class="mt-3">
                <a href="@Model.Movie.MovieImdb" target="_blank" rel="noopener" class="btn btn-outline-secondary btn-sm">
                    View on IMDB
                </a>
            </div>
        }
        <div class="mt-3">
            <a asp-action="Edit" asp-route-id="@Model.Movie.Id" class="btn btn-primary btn-sm me-2">Edit</a>
            <a asp-action="Index" class="btn btn-link btn-sm">Back to List</a>
        </div>
    </div>

    <div class="col-md-9">
        <h3>Actors</h3>
        @if (Model.Actors.Count == 0)
        {
            <div class="text-muted">No actors linked to this movie yet.</div>
        }
        else
        {
            <ul class="list-unstyled">
                @foreach (var a in Model.Actors)
                {
                    <li>• @a.Name</li>
                }
            </ul>
        }

        <h3 class="mt-4">
            Average Sentiment:
            <span class="badge @AvgBadge(Model.AverageCompound)">
                @Model.AverageCompound.ToString("0.000")
            </span>
        </h3>

        <table class=" align-middle">
            <thead>
                <tr>
                    <th style="width:70%">AI Review</th>
                    <th class="text-end">Vadersharp Sentiment</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var r in Model.Reviews)
                {
                    var badge = AvgBadge(r.Compound);
                    <tr>
                        <td>@r.Review</td>
                        <td class="text-end">
                            <span class="badge @badge">@r.Compound.ToString("0.0000")</span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
